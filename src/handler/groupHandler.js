const {db} = require('../../firestore');

const createGroupHandler = async (request, h) => {
  const {groupName, description, users} = request.payload;

  // check should have at least two users
  if (users.length < 2) {
    const response = h.response({
      message: 'should have at least two users',
    });
    response.code(400);
    return response;
  }

  // check all users should be registered
  const unregisteredUser = [];
  await Promise.all(
    users.map(async (user, index) => {
      const userRes = await db.collection('users').doc(user).get();
      if (!userRes.exists) {
        unregisteredUser.push(user);
      }
    }),
  );
  if (unregisteredUser.length > 0) {
    const response = h.response({
      message: 'all users should be registered',
      unregisteredUser: unregisteredUser,
    });
    response.code(400);
    return response;
  }

  // create a new group with autogenerated id
  const groupRes = await db.collection('groups').add({
    groupName: groupName,
    description: description,
  });
  // update the groupId property
  db.collection('groups').doc(groupRes.id).update({
    groupId: groupRes.id,
  });
  // add registered users to new group
  users.map(async (user, index) => {
    const membershipRes = await db.collection('memberships').add({
      groupId: groupRes.id,
      role: index === 0 ? 'admin' : 'member',
      userId: user,
    });
    db.collection('memberships').doc(membershipRes.id).update({
      membershipId: membershipRes.id,
    });
  });
  const response = h.response({
    message: `group ${groupName} successfully created`,
    groupId: groupRes.id,
    groupName: groupName,
  });
  response.code(201);
  return response;
};

module.exports = {createGroupHandler};
